{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Optional.jsx","components/Notifications.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","idConnect","setIdConnect","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","mic","setMic","myVideo","useRef","userVideo","connectionRef","useEffect","a","navigator","mediaDevices","getUserMedia","video","audio","getStream","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","window","location","reload","useContextValue","useContext","VideoPlayer","micUser","setMicUser","changeCol","setChangeCol","className","ref","playsInline","autoPlay","muted","onClick","Optional","idToCall","setIdToCall","text","type","Assignment","fontSize","TextField","label","onChange","e","target","fullWidth","PhoneDisabled","Phone","Notifications","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0eb7b89b.chunk.js","sourcesContent":["import React, {\r\n  createContext,\r\n  useState,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\n\r\nconst SocketContext = createContext();\r\n\r\n// const socket = io(\"http://localhost:5005\");\r\nconst socket = io(\"https://chat-video-react-v1.herokuapp.com/\");\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [stream, setStream] = useState(null);\r\n  const [idConnect, setIdConnect] = useState(\"\");\r\n  const [call, setCall] = useState({});\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n  const [callEnded, setCallEnded] = useState(false);\r\n  const [name, setName] = useState(\"Admin\");\r\n\r\n  const [mic, setMic] = useState(true);\r\n\r\n  const myVideo = useRef();\r\n  const userVideo = useRef();\r\n  const connectionRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const getStream = async (mic) => {\r\n      return await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: mic,\r\n      });\r\n    };\r\n\r\n    getStream(mic).then((currentStream) => {\r\n      setStream(currentStream);\r\n      myVideo.current.srcObject = currentStream;\r\n    });\r\n  }, [mic]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"conn\", (id) => setIdConnect(id));\r\n    socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\r\n      setCall({ isReceivedCall: true, from, name: callerName, signal });\r\n    });\r\n  }, []);\r\n\r\n  const answerCall = () => {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"answerCall\", { signal: data, to: call.from });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    peer.signal(call.signal);\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const callUser = (id) => {\r\n    const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n    peer.on(\"signal\", (data) => {\r\n      socket.emit(\"callUser\", {\r\n        userToCall: id,\r\n        signalData: data,\r\n        from: idConnect,\r\n        name,\r\n      });\r\n    });\r\n\r\n    peer.on(\"stream\", (currentStream) => {\r\n      userVideo.current.srcObject = currentStream;\r\n    });\r\n\r\n    socket.on(\"callAccepted\", (signal) => {\r\n      setCallAccepted(true);\r\n      peer.signal(signal);\r\n    });\r\n\r\n    connectionRef.current = peer;\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    setCallEnded(true);\r\n    connectionRef.current.destroy();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider\r\n      value={{\r\n        call,\r\n        callAccepted,\r\n        myVideo,\r\n        userVideo,\r\n        idConnect,\r\n        stream,\r\n        name,\r\n        callEnded,\r\n        setName,\r\n        callUser,\r\n        answerCall,\r\n        leaveCall,\r\n        setMic,\r\n        mic,\r\n      }}\r\n    >\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nconst useContextValue = () => useContext(SocketContext);\r\n\r\nexport { ContextProvider, useContextValue };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\r\n\r\nimport { useContextValue } from \"../SocketContext\";\r\n\r\nconst VideoPlayer = () => {\r\n  const {\r\n    mic,\r\n    setMic,\r\n    call,\r\n    callAccepted,\r\n    myVideo,\r\n    userVideo,\r\n    stream,\r\n    name,\r\n    callEnded,\r\n  } = useContextValue();\r\n\r\n  const [micUser, setMicUser] = useState(false);\r\n\r\n  const [changeCol, setChangeCol] = useState(\"mx-auto col-md-8 col-10 p-3\");\r\n\r\n  useEffect(() => {\r\n    if (callAccepted) {\r\n      setChangeCol(\"mx-auto col-md-6 col-10 p-3\");\r\n    }\r\n  }, [callAccepted]);\r\n\r\n  const muteMicSelf = () => {\r\n    setMic(!mic);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"row\">\r\n        {/* our own video */}\r\n        {stream && (\r\n          <div className={changeCol}>\r\n            <div>\r\n              <h4>Your Name: {name || \"name\"}</h4>\r\n            </div>\r\n            <video\r\n              className=\"w-100 border border-success\"\r\n              ref={myVideo}\r\n              playsInline\r\n              autoPlay\r\n              muted\r\n            />\r\n\r\n            <div className=\"mt-2 text-center\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={muteMicSelf}\r\n              >\r\n                {mic ? (\r\n                  <>\r\n                    mute <MicOffIcon />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    unmute <MicIcon />\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* our own video */}\r\n        {callAccepted && !callEnded && (\r\n          <div className={changeCol}>\r\n            <div>\r\n              <h4>{call.name || \"boss\"}</h4>\r\n            </div>\r\n            <video\r\n              className=\"w-100 border border-success\"\r\n              ref={userVideo}\r\n              playsInline\r\n              autoPlay\r\n              muted={micUser}\r\n            />\r\n            <div className=\"mt-2 text-center\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                onClick={() => setMicUser(!micUser)}\r\n              >\r\n                {micUser ? (\r\n                  <>\r\n                    unmute <MicIcon />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    mute <MicOffIcon />\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React, { useState } from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { Phone, PhoneDisabled, Assignment } from \"@material-ui/icons\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nimport { useContextValue } from \"../SocketContext\";\r\n\r\nconst Optional = ({ children }) => {\r\n  const {\r\n    callAccepted,\r\n    idConnect,\r\n    name,\r\n    callEnded,\r\n    setName,\r\n    callUser,\r\n    leaveCall,\r\n  } = useContextValue();\r\n\r\n  const [idToCall, setIdToCall] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"mt-3 col-md-12\">\r\n      <div className=\"mb-2\">{children}</div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-sm-12 p-3\">\r\n          {/* set name, get id */}\r\n          <form className=\"bg-light p-3 rounded\">\r\n            <h4 className=\" mb-3\">Account Info</h4>\r\n\r\n            {/* \r\n            \r\n            <TextField\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              fullWidth\r\n            ></TextField>\r\n          */}\r\n            <CopyToClipboard text={idConnect}>\r\n              <button type=\"button\" className=\"w-100 btn btn-primary mt-3\">\r\n                Copy your ID <Assignment fontSize=\"large\" />\r\n              </button>\r\n            </CopyToClipboard>\r\n          </form>\r\n        </div>\r\n\r\n        {/* another notification */}\r\n\r\n        <div className=\"col-md-6 col-sm-12 p-3\">\r\n          {/* set name, get id */}\r\n          <form className=\"bg-light p-3 rounded\">\r\n            <h4 className=\"mb-3\">Make a call</h4>\r\n            <TextField\r\n              label=\"ID to call\"\r\n              value={idToCall}\r\n              onChange={(e) => setIdToCall(e.target.value)}\r\n              fullWidth\r\n            ></TextField>\r\n            {callAccepted && !callEnded ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"w-100 btn btn-danger mt-3\"\r\n                onClick={leaveCall}\r\n              >\r\n                Hang up <PhoneDisabled fontSize=\"large\" />\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                className=\"w-100 btn btn-success mt-3\"\r\n                onClick={() => callUser(idToCall)}\r\n              >\r\n                Call <Phone fontSize=\"large\" />\r\n              </button>\r\n            )}\r\n          </form>\r\n        </div>\r\n        {/*  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Optional;\r\n","import React from \"react\";\r\n\r\nimport { useContextValue } from \"../SocketContext\";\r\n\r\nconst Notifications = () => {\r\n  const {\r\n    call,\r\n    callAccepted,\r\n    answerCall,\r\n  } = useContextValue();\r\n\r\n  return (\r\n    <div className=\"mb-5\">\r\n      {call.isReceivedCall && !callAccepted && (\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h3>{call.name} is calling: </h3>\r\n          <button className=\"mx-3 btn btn-secondary\" onClick={answerCall}>\r\n            Answer\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import VideoPlayer from \"./components/VideoPlayer\";\nimport Optional from \"./components/Optional\";\nimport Notifications from \"./components/Notifications\";\n\nfunction App() {\n  return (\n    <div className=\"container mt-4\">\n      <div className='text-center'>\n        <h1>Video chat (Hiện cò)</h1>\n      </div>\n      <div>\n        <VideoPlayer />\n      </div>\n      <div>\n        <Optional children={<Notifications />} />\n      </div>\n      {/* videoPlayer */}\n      {/* optional -> notification */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ContextProvider } from \"./SocketContext\";\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}